package io.jcervelin.creditcard.processing.usecases.validations;

import io.jcervelin.creditcard.processing.domains.CreditCard;
import io.jcervelin.creditcard.processing.domains.InvalidCreditCardException;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.junit.MockitoJUnitRunner;

import java.math.BigInteger;

@RunWith(MockitoJUnitRunner.class)
public class Luhn10ValidationTest {

    @Rule
    public final ExpectedException thrown = ExpectedException.none();

    @InjectMocks
    private Luhn10Validation target;

    @Test
    public void validateShouldExecuteWithoutException() {
        final CreditCard jack = CreditCard.builder()
                .cardNumber(BigInteger.valueOf(4138207371770767L))
                .name("Jacquelyn Brown")
                .build();
        target.validate(jack);
    }

    @Test
    public void validateShouldExecuteWithHugeNumber() {
        final CreditCard jack = CreditCard.builder()
                .cardNumber(new BigInteger("5106531951166881509386987328773925072377742071828368292956768069632539696657379985466436194466268103654869306948745618673334035285495238369909430304750946344994609693133969785136214481907096584863666834952170325583457459508284635518408543531944919563778000689471603852478811630252994630586857238660599334995895108959997168620067318837407130769943518429929782473201026668635597585814039018287886575417317723141052695686424754399874134154801184309265004361310957091749541853608110640982112483845596136847583945120085208142891564534503541329068338754435118133363468540778171729853711847624207633136866878118580247709362750253202839384674733304936542487307552408368543157838663547805350269658969755670452064126748329071683923228405273949676327031580066059580553696798578253486999854015427132448966723078869461081366749218583923375172060578595516134954983055214008141883137355585879117075193379061663854072931775842442554218277517272082946290794514336667783321106936321369417613162435399406152489821023568739199731380074408138885546094942935818876728890459156918934530804695508530149146060043023201579569489630013188171595005803298674541572919048088535567335546137851516713326552241273533485690059795488373097168156412093761764800699922240322920326739973981938509889371029170047555659565324853687325262240059800273569757731500915308410249932730536335819845569223446614996849830756817204431899844242156701398859661827964231188757853037474836423817477304188770899695695657385811615080740605961808909655181646613674469762586571456231992387983361252455183207729666266619166247692348220642151449500859794114664827910450902603401240573670338746237101615331975915349128754336051787886447734355584347630159735979238636816062839622935876942068279469000270248635906261934162305855132547544828194500045916093697092639542215001849094829375821347108600560065521476696217242345627667823779876305332615445418921682978259992903419578899452546332951373916523093033176126441479250884642238823370667738072228716526504844468565979273680122386929269057044901492012148769164609561954091524746839902663657252404480028575792246751058037342248196970524601612066503917703906964532103440197205169167182679051698254723940303783377419334893107985846129198553138728425704290589408118217782862106676675398695642228537333794183094687567084430990377860556526854138921648922672571825842604765558001768894847749582888565294188392027937897996084313073856796433466659085276597084001606575589609924979735921344377343147486789111724916506745811838595056498416208359611769561885008096335885058769562410033874212532238364337073343672885302595058052780459896329930986914605449180056688888593513544595760918418775115156007623010270024742300285822470871429196018922871050195740898142881850795634548848272382371287108786294393138210359153712828535083581419712049526457849033644062576030730312611314224015151827301334250761145250827470568160265537105048409513361556690998755741306961276103060671103908219109715664894632947615760025790057828601649134825868642434728438650217918062146997250127410319894383709370861571869400564136742445395166730621732344616537216134632126612223523969195129862855354640367483476175314052847273275541269701829968478606403779967040678147588227962668274752048020318784399900815335433072066583546320682934228884585654023976647736837463671910951980325916096814416871619457009259309356939881344622589935959528417916619956035512456210811368982785801591919535230257775126745483019295058812701029168339736132703827148651977024809924114538093028384760931234461546404670510258982432329872014575976014935545119231956798634783488126291778644221967004921073463947771802784905545638273633784878764725463847684702606766589922893679655934747042578645746714149515760483472368935764220725508604704609884280891697449127763643542566224766663644298974185338305542957369290182994166849480613206393124780595175329745025499323364523929961151634677522850398717077394726150785642423976521900821993400886644330035669070446146296020141589018824407789747855780482550033985589415122265701156867540771364039814704061853134939836934535389140877097460889217597910548882177146373075176850784192710261710185736512661250205027692945973313345181987170560897822472531215707843633093713814745023742765408450753758837156954369536770385497761294098139099398390403868889896657461409725150876652410634472626734733947172103827056385559849857566165166624459709564809719687351122149773630849726281295578832127102778243484769320101496333089548547802074837228819366997794706288319079948442133609521718738540385954835508667329379251267438437837498637968293798142510569365105371717405819575433983730976557774523534723676389277362370752836450384164943069318418065879202048725844836364166922828693581217953758365882872507875029018810739784072916031804273575363450778636601877867233135720254916322397547448550377002458230864168231734780617185033975380300794224633978293651028946706846538396529503867223309667014885418559155637959139152718914253741047671239725965829190586676935821867651864150906075467026990055184419592152179489774960344458632663979614501610039350312459499949376454396095486403249979774373107456184472170473983832269902699914973433877150731703387823877623808564031364281362569642461406602005268781061762881194457142616081882163236879902099757666837794750710543354089452585233857841224134798883636990758066086591086826644572654126630622717274933731223859225358889109293373164482771718732853371372759349849087308103181478300856049317879404640036729758758324909346328244425348254109199919969012106325694277049826993657759977460284195453076840217031218158669962763496956461959956072290010097122211380046656284085137088088457194966629506077650411226696079521465687501285698134314576510219820794220039078699839312501356370075989651496334528888232792624829128821565922814217830158466216857544770236848985864482734762506001766244942064995612563624733041928576472583713909624434620619426476097847307407712823161226658997654836840530609071737207706088835788507590059194009094611924368576100794873946558549864500284022148257650089306657058599017890265161880126543573324189440339252867952689319207403775930983842373012422479247453706158034689782181139316115977300792124804890291650412151665206524630658206581385267087295646145053022671700938785220582440518780281634189099276030584372826712896054857715055170010002089157210523737507760092127561837802952665827923696339063614159357676341589911245092688671136306226924721083163069260623000841104719712361719721945098875367624341379623965945931511339900357941166127461702037792858310344485323206633164483927650664243147746783731701790058385355207620544498703804848102538227460078349878275347278150133430619309711777422801625719636290226516239062394451216868352817445751370356101035285367219367191294268165818009746298109024080592004238389095209159253135696691689795353264461651132718386269394472510456883930225027755731576410791812772532173029155417319322386424371101816694249936061373946896519981880356278714149093544546866535810949896634465611776898132550003074790368365162987998685358644171874424128084742516677236945753988313092420686730239561243214565050109371793175587537404809372569119513130332041584887600398476824151115407609056663439336926791246077952957527129064847772753578416560301934783497777636133593174808978497265578516527629405956318448883179364910225384273828621138282629729142127251068901302906331288224595238819376611844226082002666247770305466660538104599836542426138332034532093865503498898493504376513249344120766756597350636200288631493639322482146312957580785117146357301097268326200963163172390854411058765259405632362403468354071736438736341066763446174154427907272904643892096491572442447115180225340325179936916386022265016875541513488025403323164483214360139639274803187515056873799699779034619558982589414698328377109974195479023038666037023688243859717304052074918471626957172651433948747797407895141187418995593427639747445575357904907755838092749236531586086499188839440534481184680689360118044619260714932433800594768369935761055121839809342871922967668790182956491619748851100089677003330396079288135639934143729423068941160896815783538867377470454975589492634507263686559933104428250867236621235024008179973132821259165721317271892037994943560846769961981959183868695601914833183694729850446994386714445088931662668852389016795273488800820425027469370445884373115903123855901193512375928906204208653938761834857509434836779202633665066973140280162920954157679653659522946771842223985090102870637013063856905474768624978801775610440157664442217407887040498947823878142508198414966506020431547686723007513668077537653013338436888842953704508498121775835994467262829791016024819809603174167954960621052325917377439349636361464609663129603381367471433122606048989140781319348297418760926879439470097677152640849308652646473137760920620627494853582341959914148585302267297406632363012428892559474550794541553646185254371154382718118621929519461083635968400024663327173398629441954550115264592685552451125569973388215566564053024629270912654704631191785167955696531307202415170124918989394831079545429808977620326840523318762417371735299605979149485131894553036058478497540010124621953176665895045498317023775058152111014805788759591471256723070892176078757017056996580376895252110999068105012894352478243488644268971425741985702056890260766843991596923869178114638673585320550707835704804277354550316781021778892163925627373149905007179103432898472480216521761576482543541779578435671361586143106439120353251279604928915671538898959135503220268802770181341686115496245289066436742515816164589382027906219211071758398129801336082175928000493726915852493052694475633263226630475637871586459056483096425688316466979405408430964343107721855598775584665330468380003224798311908316322804166655288172796354267112254838763156464997135194880252699304980085381241544055082153460468236872229179922553642450671823850668557971570760373376613271770205009295469424557892981717766331613910402746761866277929"))
                .name("Jacquelyn Brown")
                .build();

        target.validate(jack);
    }

    @Test
    public void validateShouldExecuteWithException() {
        final CreditCard juliano = CreditCard.builder()
                .cardNumber(BigInteger.valueOf(1111111111111111111L))
                .name("Juliano")
                .build();

        thrown.expect(InvalidCreditCardException.class);
        thrown.expectMessage(String.format("The number [%d] is not valid",juliano.getCardNumber()));

        target.validate(juliano);
    }
}